/*!
lindsvg v1.3.3
https://amphiluke.github.io/lindsvg/
(c) 2023 Amphiluke
*/
let t={AXIOM:"Axiom may only contain the following characters: A..Z,+,-,[,]",RULE:"Production rules may only contain the following characters: A..Z,+,-,[,]",LETTER:"Allowed alphabet letters are: A..Z",ALPHA:"The “alpha” parameter must be a finite number",THETA:"The “theta” parameter must be a finite number",STEP:"The “step” parameter must be a positive finite number",COUNT:"The number of iterations must be integer and finite",NUMBER:"A valid finite number expected"},e=/^[A-Z]$/;let a=/^[A-Z+\-[\]]*$/;function i(e,i=t.RULE){return a.test(e)||i}function r(a,r,n){let h=Object.create(null);return Object.entries(a).forEach((([a,s])=>{let c=function(a,i=t.LETTER){return e.test(a)||i}(a,r);!0===c&&(c=i(s,n)),!0!==c&&(h[a]=c)})),!Object.keys(h).length||h}function n(e){let a=Object.create(null);return Object.entries(e).forEach((([e,n])=>{let h=!0;switch(e){case"axiom":h=i(n,t.AXIOM);break;case"rules":h=r(n);break;case"alpha":case"theta":h=function(e,a=t.NUMBER){return Number.isFinite(e)||a}(n,t[e.toUpperCase()]);break;case"step":h=function(e,a=t.STEP){return Number.isFinite(e)&&e>0||a}(n);break;case"iterations":h=function(e,a=t.COUNT){return Number.isInteger(e)&&e>0||a}(n)}!0!==h&&(a[e]=h)})),!Object.keys(a).length||a}class h extends Error{constructor(t){let e=JSON.stringify(t,null,2);super(e),Object.defineProperty(this,"lsErrors",{value:JSON.parse(e)})}toJSON(){return JSON.parse(JSON.stringify(this.lsErrors))}}Object.defineProperty(h.prototype,"name",{configurable:!0,enumerable:!1,writable:!0,value:"LSError"});let s={F:"",B:"","+":"+","-":"-","[":"[","]":"]"},c={alpha:0,theta:0,step:10,iterations:3};function o(t){let e=n(t);if(!0!==e)throw new h(e);let{axiom:a,iterations:i}={...c,...t},r={...s,...t.rules};for(;i>0;i--)a=[...a].reduce(((t,e)=>t+(r[e]||"")),"");return function(t){let e=t.replace(/[^FB[\]+-]/g,"");do{t=e,e=e.replace(/\[[^F[\]]*]/g,"")}while(e!==t);return e}(a)}function l(t){return t.match(/([FB[\]+-])\1*/g)}class u{constructor({x:t,y:e,step:a,alpha:i,theta:r}){this.stack=[],this.x=this.minX=this.maxX=t,this.y=this.minY=this.maxY=e,this.step=a,this.alpha=-i,this.theta=r}translate(t=1){this.x+=t*this.step*Math.cos(this.alpha),this.y+=t*this.step*Math.sin(this.alpha),this.minX=Math.min(this.minX,this.x),this.maxX=Math.max(this.maxX,this.x),this.minY=Math.min(this.minY,this.y),this.maxY=Math.max(this.maxY,this.y)}rotate(t){this.alpha+=t*this.theta}pushStack(t=1){for(;t>0;t--)this.stack.push({x:this.x,y:this.y,alpha:this.alpha})}popStack(t){for(;t>0;t--)({x:this.x,y:this.y,alpha:this.alpha}=this.stack.pop())}getDrawingRect(){let t=Math.floor(this.minX),e=Math.floor(this.minY),a=Math.ceil(this.maxX),i=Math.ceil(this.maxY);return{minX:t,minY:e,maxX:a,maxY:i,width:a-t,height:i-e}}}function p(t,e){return`${+t.toFixed(4)} ${+e.toFixed(4)}`}function m(t){return t.replace(/(?:M-?\d+(?:\.\d+)? -?\d+(?:\.\d+)?)+(?=M|$)/g,"")}function f(t){let e=o(t),a=new u({x:0,y:0,...t}),i=function(t,e){let a;return m(t.reduce(((t,i)=>{let r=i.length;switch(i[0]){case"F":e.translate(r),t+=("L"===a?" ":"L")+p(e.x,e.y),a="L";break;case"B":e.translate(r),"M"===a&&(t=t.slice(0,t.lastIndexOf("M"))),t+="M"+p(e.x,e.y),a="M";break;case"+":e.rotate(r);break;case"-":e.rotate(-r);break;case"[":e.pushStack(r);break;case"]":e.popStack(r),t+=`M${p(e.x,e.y)}`,a="M"}return t}),"M"+p(e.x,e.y)))}(l(e),a);return{pathData:i,...a.getDrawingRect()}}function x(t){let e=o(t),a=new u({x:0,y:0,...t}),i=function(t,e){let a,i=0;return t.reduce(((t,r)=>{let n=t[i]||"",h=r.length;switch(r[0]){case"F":e.translate(h),n+=("L"===a?" ":"L")+p(e.x,e.y),a="L";break;case"B":e.translate(h),"M"===a&&(n=n.slice(0,n.lastIndexOf("M"))),n+="M"+p(e.x,e.y),a="M";break;case"+":e.rotate(h);break;case"-":e.rotate(-h);break;case"[":i+=h,e.pushStack(h),n=`${t[i]||""}M${p(e.x,e.y)}`,a="M";break;case"]":i-=h,e.popStack(h),n=`${t[i]||""}M${p(e.x,e.y)}`,a="M"}return t[i]=n,t}),["M"+p(e.x,e.y)]).filter((t=>t.includes("L"))).map(m)}(l(e),a);return{multiPathData:i,...a.getDrawingRect()}}function d(t,e,a){return{width:t.width||e,height:t.height||a,padding:t.padding||0,pathAttributes:{fill:t.fill||"none",stroke:t.stroke||"#000",...t.pathAttributes}}}function b({viewBox:t,width:e,height:a,content:i}){return`<svg xmlns="http://www.w3.org/2000/svg" viewBox="${t.join(" ")}" height="${a}" width="${e}">${i}</svg>`}function g(t,e){return Object.entries(t).reduce(((t,[a,i])=>(Array.isArray(i)&&(i=i[Math.min(e,i.length-1)]),void 0===i||"n/a"===i.toLowerCase()?t:`${t} ${a}="${i=i.replace(/"/g,"&quot;")}"`)),"")}function w(t,e){let{pathData:a,minX:i,minY:r,width:n,height:h}=f(t),{padding:s,width:c,height:o,pathAttributes:l}=d(e,n,h);return b({viewBox:[i-s,r-s,n+2*s,h+2*s],width:c,height:o,content:`<path d="${a}"${g(l,0)}></path>`})}function y(t,e){let{multiPathData:a,minX:i,minY:r,width:n,height:h}=x(t),{padding:s,width:c,height:o,pathAttributes:l}=d(e,n,h);return b({viewBox:[i-s,r-s,n+2*s,h+2*s],width:c,height:o,content:a.reduce(((t,e,a)=>`${t}<path d="${e}"${g(l,a)}></path>`),"")})}export{y as getMultiPathSVGCode,x as getMultiPathSVGData,w as getSVGCode,f as getSVGData};
