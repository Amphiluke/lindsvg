/*!
lindsvg v1.0.0
https://github.com/Amphiluke/lindsvg#readme
(c) 2020 Amphiluke
*/
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t=t||self).lindsvg={})}(this,(function(t){"use strict";let e={AXIOM:"Axiom may only contain the following characters: A..Z,+,-,[,]",RULE:"Production rules may only contain the following characters: A..Z,+,-,[,]",LETTER:"Allowed alphabet letters are: A..Z",ALPHA:"The “alpha” parameter must be a finite number",THETA:"The “theta” parameter must be a finite number",STEP:"The “step” parameter must be a positive finite number",COUNT:"The number of iterations must be integer and finite",NUMBER:"A valid finite number expected"},a=/^[A-Z]$/;let i=/^[A-Z+\-[\]]*$/;function n(t,a=e.RULE){return i.test(t)||a}function s(t,i,s){let r=new Map;return Object.entries(t).forEach(([t,h])=>{let o=function(t,i=e.LETTER){return a.test(t)||i}(t,i);!0===o&&(o=n(h,s)),!0!==o&&r.set(t,o)}),!r.size||r}function r(t){let a=new Map;return Object.entries(t).forEach(([t,i])=>{let r=!0;switch(t){case"axiom":r=n(i,e.AXIOM);break;case"rules":r=s(i);break;case"alpha":case"theta":r=function(t,a=e.NUMBER){return Number.isFinite(t)||a}(i,e[t.toUpperCase()]);break;case"step":r=function(t,a=e.STEP){return Number.isFinite(t)&&t>0||a}(i);break;case"iterations":r=function(t,a=e.COUNT){return Number.isInteger(t)&&t>0||a}(i)}!0!==r&&a.set(t,r)}),!a.size||a}let h={F:"",B:"","+":"+","-":"-","[":"[","]":"]"},o={alpha:0,theta:0,step:10,iterations:3};function c(t){let e=r(t);if(!0!==e)throw new Error(function t(e){return[...e].reduce((e,[a,i])=>i instanceof Map?`${e}\n${a}:${t(i).replace(/\n/g,"\n  ")}`:`${e}\n${a}: ${i}`,"")}(e));let{axiom:a,iterations:i}={...o,...t},n={...h,...t.rules};for(;i>0;i--)a=[...a].reduce((t,e)=>t+(n[e]||""),"");return a}let l={translate(){this.x+=this.step*Math.cos(this.alpha),this.y+=this.step*Math.sin(this.alpha),this.minX=Math.min(this.minX,this.x),this.maxX=Math.max(this.maxX,this.x),this.minY=Math.min(this.minY,this.y),this.maxY=Math.max(this.maxY,this.y)},rotate(t){this.alpha+=t*this.theta},pushStack(){this.stack.push({x:this.x,y:this.y,alpha:this.alpha})},popStack(){({x:this.x,y:this.y,alpha:this.alpha}=this.stack.pop())},getDrawingRect(){let t=Math.floor(this.minX),e=Math.floor(this.minY),a=Math.ceil(this.maxX),i=Math.ceil(this.maxY);return{minX:t,minY:e,maxX:a,maxY:i,width:a-t,height:i-e}}};function u(t,e){return`${+t.toFixed(4)} ${+e.toFixed(4)}`}function p(t){let e=c(t),a=function({x:t,y:e,step:a,alpha:i,theta:n}){let s=Object.create(l);return s.stack=[],s.x=s.minX=s.maxX=t,s.y=s.minY=s.maxY=e,s.step=a,s.alpha=-i,s.theta=n,s}({x:0,y:0,...t});return{pathData:function(t,e){let a;return[...t].reduce((t,i)=>{switch(i){case"F":e.translate(),t+=("L"===a?" ":"L")+u(e.x,e.y),a="L";break;case"B":e.translate(),"M"===a&&(t=t.slice(0,t.lastIndexOf("M"))),t+="M"+u(e.x,e.y),a="M";break;case"+":e.rotate(1);break;case"-":e.rotate(-1);break;case"[":e.pushStack();break;case"]":e.popStack(),t+=`M${u(e.x,e.y)}`,a="M"}return t},"M"+u(e.x,e.y))}(function(t){return t.replace(/[^FB[\]+-]/g,"")}(e),a),...a.getDrawingRect()}}t.getSVGCode=function(t,e){let{pathData:a,minX:i,minY:n,width:s,height:r}=p(t);e={width:s,height:r,padding:0,fill:"none",stroke:"#000",...e};let{padding:h}=e;return`<svg xmlns="http://www.w3.org/2000/svg" viewBox="${i-h} ${n-h} ${s+2*h} ${r+2*h}" height="${e.height}" width="${e.width}">\n  <path d="${a}" fill="${e.fill}" stroke="${e.stroke}"></path>\n</svg>`},t.getSVGData=p,Object.defineProperty(t,"__esModule",{value:!0})}));
